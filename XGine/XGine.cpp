/* By Adam Micha³owski / J 0 |< e R / (c) 2009 */
#include "XGine.h"

/**  G L O B A L S  **/
Engine	gEngine;
string	g_appName								= "XGINE - Next-Gen 3D Graphics Engine";
u32		g_logvfs								= 0;
u32		g_logmem								= 0;
u32		g_logker								= 0;
u32		r_width									= 800;
u32		r_height								= 600;
u32		r_windowed								= 1;
u32		r_wireframe								= 0;
u32		r_hidestats								= 3;
u32		r_multisample							= 0;
u32		r_geometryInstancing					= 1;
f32		r_cameraNearZ							= 1.0f;
f32		r_cameraFarZ							= 10000.0f;
string  g_path_shaders							= "shaders/";
string  g_path_textures 						= "textures/";
string  g_path_models							= "models/";
u32		r_shadowMapSpotSize						= 512;
u32		r_shadowMapDirSize						= 2048;
f32		g_shadowMapDirViewVolume				= 200.0f;
f32		g_shadowMapDirViewDist					= 500.0f;
f32		g_shadowMapDirNearZ						= 1.0f;
f32		g_shadowMapDirFarZ						= 2000.0f;
f32		r_shadowMappingZBias					= 0.001f;
u32		r_optimizeRSChanges						= 1;
u32		g_allowShaderCache						= 1;
string	g_shaderCacheName						= "data/shaders.xpak";
u32		g_shaderCacheCompression				= COMP_ZLIB;
u32		g_allowMeshCache						= 1;
u32		g_allowResourcesCache					= 1;
u32		g_resourcesCacheCompression				= COMP_ZLIB;
u32		r_autoGenerateLODs						= 1;
u32		r_enableLODs							= 1;
u32		r_packInstanceDataToFloat16				= 1;
string	g_terrainShader							= "Terrain.fx";
string	g_terrainTexColorMap1					= "terrain/rock.jpg";
string	g_terrainTexColorMap2					= "terrain/grass.jpg";
string	g_terrainTexColorMap3					= "terrain/sand.jpg";
string	g_terrainTexColorMap4					= "terrain/ground.jpg";
string	g_terrainTexNormalMap1					= "terrain/rock_n.png";
string	g_terrainTexNormalMap2					= "terrain/grass_n.png";
string	g_terrainTexNormalMap3					= "terrain/sand_n.png";
string	g_terrainTexNormalMap4					= "terrain/ground_n.png";
u32		g_terrainDebugBB						= 0;
u32		g_terrainSectorSize						= 64;
f32		g_terrainMaxHeight						= 350.0f;
f32		g_terrainLowVBExponent					= 0.20f;
f32		g_terrainLowVBExponentX					= 2.0f;
u32		g_terrainMaxLODLevels					= 3;
f32		g_terrainMaxDistHighGeo					= 200;
f32		g_terrainMaxDistHighGeoStep				= 500;
f32		g_terrainMaxDistHighTex					= 500;
f32		g_terrainMaxDistHighTexFade				= 200;
u32		g_terrainLodStart						= 0;
u32		g_terrainLodEnabled						= 1;
u32		g_rendObjDebugBB						= 0;
u32		g_rendOctreeDebugBB						= 0;
u32		r_shadowDist							= 200;
f32		r_bloomBrightThreshold					= 0.25f;
f32		r_bloomAmount							= 4;
f32		r_bloomIntensity						= 1.25f;
f32		r_bloomBaseIntensity					= 1;
f32		r_bloomSaturation						= 1;
f32		r_bloomBaseSaturation					= 1;
u32		r_bloomEnabled							= 0;
u32		r_enabledSoftParticles					= 1;
u32		r_enabledReflectionBlur					= 0;
u32		r_enabledSkyReflection					= 1;
u32		r_enabledTerrainReflection				= 1;
u32		r_enabledSurfacesReflection				= 0;
u32		r_enabledEntitiesReflection				= 0;
u32		r_deferredStencilOptimize				= 0;
u32		r_deferredScissorOptimize				= 1;
u32		r_deferredDebugComplexity				= 0;	
u32		r_enabledNormalMap						= 1;
u32		r_enabledParallaxMap					= 1;
u32		r_enabledSpecular						= 1;
u32		r_enabledAlbedo							= 1;
u32		r_enabledCubeMap						= 1;
u32		r_enabledSubsurfaceScattering			= 1;
u32		r_enabledVegetationAnimation			= 1;
u32		r_cullingLights							= 1;
u32		r_cullingFrustum						= 1;
u32		r_cullingOcclusion						= 0;
u32		r_enabledShadows						= 0; 
u32		r_enabledShadowMapping					= 0;
u32		r_enabledVarianceShadowMapping			= 0;
u32		r_enabledBlurVarianceShadowMaps			= 0;
u32		r_enabledBoxFilterVarianceShadowMaps	= 0;
u32		r_enabledExponentialShadowMapping		= 0;
u32		r_enabledShadowMappingGeoRendering		= 0;
u32		r_enabledShadowMappingDeferred			= 0;
u32		r_enabledShadowMappingPCF				= 0;
u32		r_enabledShadowMappingPCFHigh			= 0;
u32		r_enabledShadowMappingPCFMed			= 0;
u32		r_enabledSMScreenSpaceBlur				= 0;
u32		r_enabledShadowVolume					= 0;
u32		r_guassianBlurKernelSize				= 7;
u32		r_enabledDeferred						= 1;
u32		r_enabledLightPrePass					= 0;
u32		r_forceForward							= 0;
u32		r_enabledZPrePass						= 0;
u32		r_renderSky								= 1;
u32		r_renderTerrain							= 1;
u32		r_renderSurfaces						= 1;
u32		r_renderEntities						= 1;
u32		r_enabledSSAO							= 0;
f32		r_ssaoRadius							= 1.88f;
f32		r_ssaoFresZSize							= 3;
f32		r_ssaoCap								= 1;
f32		r_ssaoMultiplier						= 5000;
f32		r_ssaoDepthTolerance					= 0.001;
u32		r_hdrRendering							= 1;
u32		r_hdrToneMap							= 1;
f32		r_hdrToneMapScale						= 0.45f;
u32		r_hdrEyeAdaptation						= 1;
f32		r_hdrEyeAdaptationTimeScale				= 0.7f;
u32		r_hdrBloom								= 1;
f32		r_hdrBloomAmount						= 0.8f;
u32		r_hdrBrightPass							= 1;
Vec3	r_hdrColorGrade							= Vec3(1,1,1);
u32		r_hdrColorGradeEnabled					= 0;
u32		r_dofEnabled							= 1;
f32		r_dofFocalPlane							= 300;
f32		r_dofNearFocalPlane						= 1;
f32		r_dofFarFocalPlane						= 7000;
u32		r_dofEyeAdaptation						= 1;
f32		r_dofEyeAdaptationTimeScale				= 4.0f;
f32		r_dofBlurExponent						= 1;
u32		r_heatHazeEnabled						= 0;
f32		r_heatHazeStrength						= 3;
f32		r_heatHazeTimeScale						= 2;
u32		r_waterRenderingEnabled					= 1;
u32		r_highQualityWaterEnabled				= 1;
u32		r_waterOcean							= 1;
f32		r_waterAmplitude						= 10.0f;
f32		r_waterH0coef							= 0.8;
f32		r_waterH1coef							= 0.4;
f32		r_waterH2coef							= 0.2;
f32		r_waterH3coef							= 0.1;
f32		r_waterDetailNormalMapCoef				= 0.1;
f32		r_waterDetailNormalMapScale				= 4;
f32		r_waterFresnelR0						= 0.5f;
f32		r_waterRefractionStrength				= 0.5f;
f32		r_waterSpecularExp						= 40;
Vec3	r_waterColor							= Vec3(0.02, 0.13, 0.17 );
f32		r_refExp								= 1.0f;
u32		r_sunColorEnabled						= 1;
Vec3	r_sunColor								= Vec3(0.71,0.54,0.40);
u32		r_skyColorEnabled						= 1;
Vec3	r_skyColorFront							= Vec3(0.80,0.70,0.20);
Vec3	r_skyColorBack							= Vec3(0.48,0.60,0.80);
f32		r_sunSizeExp							= 1;
u32		r_enabledVLS							= 0;
u32		r_enabledHDRVLS							= 0;
Vec4	r_fogParams								= Vec4(1890.0f, 7560.0f, 0.0f, 1);
Vec3	r_fogColor								= Vec3(0.87, 0.68, 0.40);


BOOL APIENTRY _XGineDllMain(HMODULE hModule, DWORD  ul_reason_for_call, LPVOID lpReserved)
{
	switch (ul_reason_for_call)
	{
	case DLL_PROCESS_ATTACH:
		{
		}break;
	case DLL_PROCESS_DETACH:
		break;
	}
	return TRUE;
}